<?xml version='1.0' encoding='UTF-8'?>
<project name="Sixlegs PNG" default="compile">
    <property file="${user.home}/build.properties" />
    <property file="build.properties" />

    <property name="javadoc.access" value="public"/>

    <property name="compile.source" value="1.3"/>
    <property name="compile.target" value="1.3"/>
    <property name="compile.bootclasspath" value=""/> 
    <property name="compile.extdirs" value=""/>

    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="false"/>

    <property name="version" value="2.0.0-dev"/>
    <property name="viewer.file" value="src/test/images/misc/cc1.png"/>
    <property name="suite.file" value="suite.png"/>

    <target name="init">
        <tstamp/>
        <path id="path.lib">
            <fileset dir="lib" includes="**/*.jar"/>
        </path>
        <path id="path.run">
            <path refid="path.lib"/>
            <pathelement path="build/main"/>
        </path>
        <path id="path.test">
            <path refid="path.run"/>
            <pathelement path="build/test"/>
        </path>
        <path id="path.examples">
            <path refid="path.run"/>
            <pathelement path="build/examples"/>
        </path>
    </target>

    <target name="compile" depends="init" description="Compile">
        <compile module="main" refid="path.lib"/>
    </target>

    <target name="compile-test" depends="compile" description="Compile tests">
        <compile module="test" refid="path.run"/>
    </target>

    <target name="compile-examples" depends="compile" description="Compile examples">
        <compile module="examples" refid="path.run"/>
    </target>

    <macrodef name="compile">
        <attribute name="module"/>
        <attribute name="refid"/>
        <sequential>
            <mkdir dir="build/@{module}"/>
            <copy todir="build/@{module}">
                <fileset dir="src/@{module}" excludes="**/*.java"/>
            </copy>
            <javac srcdir="src/@{module}" destdir="build/@{module}"
              source="${compile.source}"
              target="${compile.target}" bootclasspath="${compile.bootclasspath}" extdirs="${compile.extdirs}"
              debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
                 <classpath refid="@{refid}"/>
            </javac>
        </sequential>
    </macrodef>

    <target name="test" depends="compile-test">
        <junit>
            <!-- <jvmarg value="-Xprof"/> -->
            <formatter type="plain" usefile="false"/>
            <classpath refid="path.test"/>
            <test name="${testcase}" if="testcase"/>
            <batchtest unless="testcase">
                <fileset dir="src/test" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <macrodef name="viewerImpl">
        <attribute name="file"/>
        <sequential>
	    <java classname="com.sixlegs.png.examples.Viewer" classpathref="path.examples" fork="yes">
		<arg value="@{file}"/>
	    </java>
        </sequential>
    </macrodef>

    <target name="viewer" depends="compile-examples">
        <viewerImpl file="${viewer.file}"/>
    </target>

    <target name="suite" depends="compile-test, compile-examples">
        <java classname="com.sixlegs.png.SuiteViewer" classpathref="path.test">
            <arg value="${suite.file}"/>
        </java>
        <viewerImpl file="${suite.file}"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="build"/>
        <delete dir="dist"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="dist"/>
        <jar jarfile="dist/png.jar">
            <fileset dir="build/main"/>
        </jar>
    </target>

    <target name="javadoc" depends="compile" description="Generate the javadoc">
        <mkdir dir="dist/javadoc"/>
        <javadoc 
          sourcepath="src/main"
          destdir="dist/javadoc"
          access="${javadoc.access}"
          failonerror="true"
          packagenames="com.sixlegs.image.png.*"
          classpathref="path.run"
          Author="true"
          Version="true"
          Use="true"
        />
    </target>

    <target name="dist" depends="clean,test,javadoc,jar">
        <copy todir="dist/src">
            <fileset dir="src" excludes="test/**,**/*.java~"/>
        </copy>
        <copy todir="dist">
            <fileset dir="." includes="*.txt"/>
        </copy>

        <fixcrlf srcDir="dist" includes="**/*.txt,**/*.java,**/*.html" eol="unix"/>
        <tar destfile="dist/png-sixlegs-${version}.tar.gz" compression="gzip">
            <tarfileset prefix="png-sixlegs-${version}" dir="dist" excludes="*.zip,*.gz"/>
        </tar>

        <fixcrlf srcDir="dist" includes="**/*.txt,**/*.java,**/*.html" eol="dos"/>
        <zip destfile="dist/png-sixlegs-${version}.zip">
            <zipfileset prefix="png-sixlegs-${version}" dir="dist" excludes="*.zip,*.gz"/>
        </zip>
    </target>

    <target name="pmd" depends="init">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="path.lib"/>
        <pmd rulesetfiles="rulesets/basic.xml,rulesets/coupling.xml,rulesets/imports.xml,rulesets/unusedcode.xml">
            <formatter type="html" toFile="pmd.html"/>
            <fileset dir="src/main">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
</project>
